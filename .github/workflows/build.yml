name: Build and upload Docker images
on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io

# Follows https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#publishing-a-package-using-an-action

jobs:
  build-nc-test-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    env:
      IMAGE_NAME: nc-scim-nextcloud-test-server

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: false

    - name: Build image
      run: docker build tests --file tests/Dockerfile.nctest --tag ${{ env.IMAGE_NAME }} --label "runnumber=${GITHUB_RUN_ID}"
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push image
      run: |
        IMAGE_ID=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}

        # This changes all uppercase characters to lowercase.
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        # This strips the git ref prefix from the version.
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # This strips the "v" prefix from the tag name.
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION


  build-connector-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    env:
      IMAGE_NAME: nc-scim

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: false

    - name: Setup Python 3.13
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'

    - name: Add Poetry to PATH
      shell: bash
      run: echo "/root/.local/bin" >> $GITHUB_PATH

    - name: Install poetry
      uses: abatilo/actions-poetry@v4

    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local

    - uses: actions/cache@v3
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}

    - name: Install the project dependencies
      run: |
        poetry install

    - name: Build nc-scim with Poetry
      run: |
        poetry build --clean

    - name: Build image
      run: docker build . --file Dockerfile --tag ${{ env.IMAGE_NAME }} --label "runnumber=${GITHUB_RUN_ID}"
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push image
      run: |
        IMAGE_ID=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}

        # This changes all uppercase characters to lowercase.
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        # This strips the git ref prefix from the version.
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # This strips the "v" prefix from the tag name.
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION